@using Kendo.Mvc.UI
@model BeerApp.Web.Areas.Administration.ViewModels.Recipe.AdminRecipeViewModel

@{
    ViewBag.Title = "AdminRecipeViewModel";
}

<div class="row">

    <div class="form-group">
        @Html.LabelFor(model => model.BeerTypeId, "Beer Style", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @(Html.Kendo().DropDownList()
    .Name("BeerTypeId") // Name of the widget should be the same as the name of the property
    .DataValueField("Id") // The value of the dropdown is taken from the EmployeeID property
    .DataTextField("Name") // The text of the items is taken from the EmployeeName property
    .BindTo((System.Collections.IEnumerable) ViewData["types"]) // A list of all employees which is populated in the controller
            )
            @Html.ValidationMessageFor(model => model.BeerTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>



</div>