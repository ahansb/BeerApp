@using Kendo.Mvc.UI

@(Html.Kendo().Grid<BeerApp.Web.Areas.Administration.Models.AdminBeerResponseViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Id);
          columns.Bound(c => c.Name);
          columns.Bound(c => c.Type);
          columns.Bound(c => c.Country);
          columns.Bound(c => c.ShortDescription).Title("Description");
          columns.Bound(c => c.ProducedSince);
          columns.Bound(c => c.AlcoholContaining);
          columns.Bound(c => c.PhotoUrl);
          columns.Bound(c => c.VotesCount);
          columns.Bound(c => c.CommentsCount);
          columns.Bound(c => c.CreatedOn).Format("{0:yyyy-MM-dd HH:mm:ss}");
          columns.Bound(c => c.ModifiedOn).Format("{0:yyyy-MM-dd HH:mm:ss}");
          columns.Bound(c => c.IsDeleted);
          columns.Bound(c => c.DeletedOn).Format("{0:yyyy-MM-dd HH:mm}");
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(100);
      })
      .ToolBar(toolbar => {
          toolbar.Create();
          toolbar.Excel();
      })
      .ColumnMenu()
      .Editable(editable => editable.Mode(GridEditMode.PopUp))
      .Pageable()
      .Sortable(sortable => {
          sortable.SortMode(GridSortMode.MultipleColumn);
      })
      .Filterable()
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Action("Beers_Read", "AllBeers"))
          .Create(create => create.Action("Beers_Create", "AllBeers"))
          .Update(update => update.Action("Beers_Update", "AllBeers"))
          .Destroy(destroy => destroy.Action("Beers_Destroy", "AllBeers"))
      )
)
